[{"path":"https://some.example-url.com/NOTES.html","id":"config","dir":"","previous_headings":"","what":"config","title":"NA","text":"drop undefined columns (consider ) user: 3 digit integer study: open home: open room: fixed set xlsx Idea write_annex -> create template copy -> fill; inform user write_annex -> existing, warn user (overwrite = TRUE) annex_validate -> show ’s missing","code":""},{"path":"https://some.example-url.com/articles/Annex.html","id":"reading-demo-data","dir":"Articles","previous_headings":"","what":"Reading Demo Data","title":"Getting Started","text":"article using tiny demo data set called Bedroom.txt (shipped package). data sets different campagnes come various formats, annex package provide import functions, however, series demos provided read common formats. case, data set comes text/CSV file can easily read using Rs read.table() function (see ?read.table). demo data set comes format expected convenience funtion read.csv(), thus needed … return data.frame 51890 observations 8 variables. first row (datetime information) called \"X\" column name defined text file. Can renamed different ways, e.g.,:","code":"raw <- read.csv(\"demo_Bedroom.txt\") dim(raw)           # Dimension of the object ## [1] 51890     8 summary(raw)       # Object summary ##       X             radonShortTermAvg      temp          humidity     ##  Length:51890       Min.   : 57.0     Min.   :10.10   Min.   :37.00   ##  Class :character   1st Qu.:154.0     1st Qu.:18.40   1st Qu.:49.00   ##  Mode  :character   Median :209.0     Median :18.90   Median :52.00   ##                     Mean   :216.3     Mean   :19.23   Mean   :52.21   ##                     3rd Qu.:267.0     3rd Qu.:19.90   3rd Qu.:55.00   ##                     Max.   :529.0     Max.   :24.20   Max.   :64.00   ##       co2             voc          pressure          light        ##  Min.   :350.0   Min.   :  46   Min.   : 970.6   Min.   :  0.00   ##  1st Qu.:456.0   1st Qu.:  71   1st Qu.:1003.4   1st Qu.:  0.00   ##  Median :517.0   Median : 103   Median :1013.2   Median :  9.00   ##  Mean   :529.6   Mean   : 114   Mean   :1012.0   Mean   : 40.09   ##  3rd Qu.:600.0   3rd Qu.: 138   3rd Qu.:1020.1   3rd Qu.:100.00   ##  Max.   :907.0   Max.   :2205   Max.   :1046.6   Max.   :100.00 head(raw)          # Content of the demo object ##                     X radonShortTermAvg temp humidity co2 voc pressure light ## 1 2011-01-01 00:01:26               151 18.8       51 470 136   1026.5     0 ## 2 2011-01-01 00:06:25               151 18.8       51 477 142   1026.5     0 ## 3 2011-01-01 00:11:25               151 18.8       51 483 131   1026.5     0 ## 4 2011-01-01 00:16:25               151 18.8       51 477 140   1026.5     0 ## 5 2011-01-01 00:21:25               151 18.8       51 481 135   1026.4     0 ## 6 2011-01-01 00:26:25               168 18.7       51 483 131   1026.4     0 names(raw)         # Names of the variables ## [1] \"X\"                 \"radonShortTermAvg\" \"temp\"              ## [4] \"humidity\"          \"co2\"               \"voc\"               ## [7] \"pressure\"          \"light\" names(raw)[1] <- \"datetime\" names(raw) ## [1] \"datetime\"          \"radonShortTermAvg\" \"temp\"              ## [4] \"humidity\"          \"co2\"               \"voc\"               ## [7] \"pressure\"          \"light\""},{"path":"https://some.example-url.com/articles/Annex.html","id":"preparing-data","dir":"Articles","previous_headings":"","what":"Preparing data","title":"Getting Started","text":"function annex() used prepare data analysis. requires  specifies (numeric) variables , date time information stored, (available) grouping information . grouping based study, home (building), room. can done two ways: information data set (raw); case data can provided via argument  calling annex(). information already stored data set (raw). case, can used directly. allows process multiple ‘rooms’ . Preparing date time information function annex() requires date time information one variable (one column) class POSIXt. moment, information class character: … must converted first; using function .POSIXct() (see ?.POSIXct() details). Information study, home, room included Currently, object raw contain grouping information (study, home, room). case, can provided via meta argument. formula specifies variables aggregated named date time information stored. Note: date information must class POSIXt (datetime object). function annex() (based formula) check required information available correct type, modify data set, returns object class c(“annex”, “data.frame”) looks follows: Information study, home, room already included case information study, home, room already included, can specified formula. Note also allows process data sets containing observations multiple studies, homes, rooms. data set raw yet contain information, added following just demonstration. calling annex() grouping can now specified follows: Note meta longer required (ignored set). Description variables data1 data2 datetime: Unmodified time information study, home, room: Information (meta; constant case) season: Additional season information observation falls tod: Time day information observation falls … followed numeric variables analyzed next step. Note naming (except season tod) may differ follow formula specification original data set.","code":"class(raw$datetime) ## [1] \"character\" raw <- transform(raw, datetime = as.POSIXct(raw$datetime,                                             format = \"%Y-%m-%d %H:%M:%S\", tz = \"UTC\")) class(raw$datetime) ## [1] \"POSIXct\" \"POSIXt\" library(\"annex\") data1 <- annex(temp + co2 + voc ~ datetime,                data = raw,                meta = list(study = 51, home = \"foo\", room = \"WZ\")) class(data1) ## [1] \"annex\"      \"data.frame\" head(data1, n = 2) ##              datetime study room home season   tod temp co2 voc ## 1 2011-01-01 00:01:26    51   WZ  foo  12-02 23-07 18.8 470 136 ## 2 2011-01-01 00:06:25    51   WZ  foo  12-02 23-07 18.8 477 142 raw2 <- transform(raw, study = 9901, home = \"bar\", room = \"Garage\") head(raw2, n = 2) ##              datetime radonShortTermAvg temp humidity co2 voc pressure light ## 1 2011-01-01 00:01:26               151 18.8       51 470 136   1026.5     0 ## 2 2011-01-01 00:06:25               151 18.8       51 477 142   1026.5     0 ##   study home   room ## 1  9901  bar Garage ## 2  9901  bar Garage data2 <- annex(temp + co2 + voc ~ datetime | study + home + room,                data = raw2) class(data2) ## [1] \"annex\"      \"data.frame\" head(data2, n = 2) ##              datetime study home   room season   tod temp co2 voc ## 1 2011-01-01 00:01:26  9901  bar Garage  12-02 23-07 18.8 470 136 ## 2 2011-01-01 00:06:25  9901  bar Garage  12-02 23-07 18.8 477 142"},{"path":"https://some.example-url.com/articles/Annex.html","id":"checking-regularity","dir":"Articles","previous_headings":"","what":"Checking regularity","title":"Getting Started","text":"S3 method .regular() can used check whether observations annex object strictly regular (least regular). Regularity means intervals observations always multiple shortest interval recorded (e.g., hourly data). Strictly regular checks intervals , .e. hourly without gaps. return function logical vector name corresponds ‘study - home - room’. case time series regular, strictly regular indicates gaps time series.","code":"is.regular(data1)                     # by default strict = TRUE ## 51 - WZ - foo  ##         FALSE is.regular(data2, strict = FALSE) ## 9901 - bar - Garage  ##                TRUE"},{"path":"https://some.example-url.com/articles/Annex.html","id":"object-statisticsanalysis","dir":"Articles","previous_headings":"","what":"Object Statistics/Analysis","title":"Getting Started","text":"interactive table shows content object long returned annex_stats() format = \"long\".","code":"wide <- annex_stats(data1) head(wide, n = 3) ##   study room home season   tod variable  Min p2.5  p25  p50  p75 p97.5  Max ## 1    51   WZ  foo  12-02 23-07     temp 17.4 17.9 18.2 18.4 18.6  18.8 19.3 ## 2    51   WZ  foo  03-05 23-07     temp 18.1 18.3 18.8 19.1 19.7  21.8 23.9 ## 3    51   WZ  foo  06-08 23-07     temp 18.9 18.9 19.7 20.0 20.2  20.6 20.7 ##          Sd     Mean    N NAs     shape1    shape2  exp_param ## 1 0.2579202 18.37469 8399   0 -88201.673 83401.501 0.05442269 ## 2 0.8870494 19.37095 7930   0  -8780.046  8326.788 0.05162371 ## 3 0.4354530 19.93285  959   0 -39690.823 37699.596 0.05016845 long <- annex_stats(data1, format = \"long\") head(long, n = 6) ##   study room home season   tod variable stats value ## 1    51   WZ  foo  12-02 23-07     temp   Min  17.4 ## 2    51   WZ  foo  12-02 23-07     temp  p2.5  17.9 ## 3    51   WZ  foo  12-02 23-07     temp   p25  18.2 ## 4    51   WZ  foo  12-02 23-07     temp   p50  18.4 ## 5    51   WZ  foo  12-02 23-07     temp   p75  18.6 ## 6    51   WZ  foo  12-02 23-07     temp p97.5  18.8"},{"path":"https://some.example-url.com/articles/Annex.html","id":"object-summary","dir":"Articles","previous_headings":"","what":"Object Summary","title":"Getting Started","text":"default, summary() returns Rs standard summary output group (study, room, home), using type = \"default\". However, argument type set \"statistics\", statistical summary displayed. returned statistics(data1) explained next section.","code":"summary(data1) ## study = 51, room = WZ, home = foo  ## Number of observations:  51890  ##     datetime                        season         tod             temp       ##  Min.   :2011-01-01 00:01:26.00   12-02:25185   23-07:17288   Min.   :10.10   ##  1st Qu.:2011-02-15 05:25:06.00   03-05:23826   07-23:34602   1st Qu.:18.40   ##  Median :2011-04-01 18:50:05.00   06-08: 2879                 Median :18.90   ##  Mean   :2011-04-01 14:21:34.04   09-11:    0                 Mean   :19.23   ##  3rd Qu.:2011-05-16 22:11:18.00                               3rd Qu.:19.90   ##  Max.   :2011-06-30 23:57:25.00                               Max.   :24.20   ##       co2             voc       ##  Min.   :350.0   Min.   :  46   ##  1st Qu.:456.0   1st Qu.:  71   ##  Median :517.0   Median : 103   ##  Mean   :529.6   Mean   : 114   ##  3rd Qu.:600.0   3rd Qu.: 138   ##  Max.   :907.0   Max.   :2205"},{"path":"https://some.example-url.com/articles/Annex.html","id":"performing-the-analysis","dir":"Articles","previous_headings":"","what":"Performing the analysis","title":"Getting Started","text":"TODO(R)","code":""},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reading from Textfiles","text":"See .","code":""},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"the-configuration","dir":"Articles","previous_headings":"","what":"The configuration","title":"Reading from Textfiles","text":"config must data.frame specific content, package care data.frame comes . case using textfile called demo_Bedroom_config.TXT (shipped package). Whilst file extension ‘CSV’, content still CSV-alike, however, must specify details reading file. details, read manual page ?read.table (R base functionality).","code":"config <- read.table(\"demo_Bedroom_config.TXT\",                      sep = \"\",             # Separator: one or multiple spaces                      quote = \"\\\"\",         # Characters are in quotes                      header = TRUE,        # First row contains variable names                      na.strings = \"empty\") # Custom value for 'not defined' print(config) ##              column variable     study        home room ## 1                 X datetime      <NA>        <NA> <NA> ## 2               co2      CO2 DEMO_STUD Casa_Blanca  Bed ## 3          humidity       rH DEMO_STUD Casa_Blanca  Bed ## 4             light    Light DEMO_STUD Casa_Blanca  Bed ## 5          pressure Pressure DEMO_STUD Casa_Blanca  Bed ## 6              temp        T DEMO_STUD Casa_Blanca  BED ## 7               voc      VOC DEMO_STUD Casa_Blanca  BED ## 8 radonShortTermAvg    Radon DEMO_STUD Casa_Blanca  BED"},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"checking-the-config-object","dir":"Articles","previous_headings":"The configuration","what":"Checking the config object","title":"Reading from Textfiles","text":"can check/validate whether config object contains expected annex_prepare() used next step. Note step required config object validated inside annex_prepare() case.","code":"library(\"annex\") annex_check_config(config)"},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Reading from Textfiles","text":"well configuration, demo data set comes tabular text file called demo_Bedroom.txt (also shipped package). content (first lines) file look follows: import data one can use read.csv() read.table(). format follows defaults read.csv() efficient use: Note first column (first variable) date time information called \"X\". set automatically R column first column .txt file unnamed (see output ). course renamed, however, one can also work - defined datetime variable config file named \"X\".","code":",radonShortTermAvg,temp,humidity,co2,voc,pressure,light 2011-01-01 00:01:26,151.0,18.8,51.0,470.0,136.0,1026.5,0 2011-01-01 00:06:25,151.0,18.8,51.0,477.0,142.0,1026.5,0 2011-01-01 00:11:25,151.0,18.8,51.0,483.0,131.0,1026.5,0 2011-01-01 00:16:25,151.0,18.8,51.0,477.0,140.0,1026.5,0 raw_df <- read.csv(\"demo_Bedroom.txt\") head(raw_df) ##                     X radonShortTermAvg temp humidity co2 voc pressure light ## 1 2011-01-01 00:01:26               151 18.8       51 470 136   1026.5     0 ## 2 2011-01-01 00:06:25               151 18.8       51 477 142   1026.5     0 ## 3 2011-01-01 00:11:25               151 18.8       51 483 131   1026.5     0 ## 4 2011-01-01 00:16:25               151 18.8       51 477 140   1026.5     0 ## 5 2011-01-01 00:21:25               151 18.8       51 481 135   1026.4     0 ## 6 2011-01-01 00:26:25               168 18.7       51 483 131   1026.4     0"},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"date-and-time-information","dir":"Articles","previous_headings":"The data","what":"Date and time information","title":"Reading from Textfiles","text":"need ensure datetime column (variable \"X\") class POSIXt, else prepare_annex() throw error. Currently, variable stored character (text). date time information following ISO standard, needed take raw_df$X convert information proper datetime variable calling .POSIXct() without providing format specification. case information follow ISO representation, format can given. details read manual ?POSIXct; available format specifications can found details section manual ?strftime.","code":"class(raw_df$X) ## [1] \"character\" # Note: Format not required in this case (but can be given) # Convert chracter; store back on the original data.frame raw_df$X <- as.POSIXct(raw_df$X, format = \"%Y-%m-%d %H:%M:%S\", tz = \"UTC\") class(raw_df$X) ## [1] \"POSIXct\" \"POSIXt\""},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"preparing-data","dir":"Articles","previous_headings":"","what":"Preparing data","title":"Reading from Textfiles","text":"can now use raw_df object combination config prepare data. shown, data set raw_df brought new format. datetime: time observation study/home/room: identifiers … followed variables found.","code":"prepared_df <- annex_prepare(raw_df, config) head(prepared_df) ##              datetime     study        home room CO2 Light Pressure Radon RH ## 1 2011-01-01 00:01:26 DEMO_STUD Casa_Blanca  BED 470     0   1026.5   151 51 ## 2 2011-01-01 00:06:25 DEMO_STUD Casa_Blanca  BED 477     0   1026.5   151 51 ## 3 2011-01-01 00:11:25 DEMO_STUD Casa_Blanca  BED 483     0   1026.5   151 51 ## 4 2011-01-01 00:16:25 DEMO_STUD Casa_Blanca  BED 477     0   1026.5   151 51 ## 5 2011-01-01 00:21:25 DEMO_STUD Casa_Blanca  BED 481     0   1026.4   151 51 ## 6 2011-01-01 00:26:25 DEMO_STUD Casa_Blanca  BED 483     0   1026.4   168 51 ##      T VOC ## 1 18.8 136 ## 2 18.8 142 ## 3 18.8 131 ## 4 18.8 140 ## 5 18.8 135 ## 6 18.7 131"},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"performing-the-analysis","dir":"Articles","previous_headings":"","what":"Performing the analysis","title":"Reading from Textfiles","text":"object prepared_df now ready () create object class \"annex\" perform analysis. Just fun, even make sense","code":""},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"prepare-annex-object","dir":"Articles","previous_headings":"Performing the analysis","what":"Prepare annex object","title":"Reading from Textfiles","text":"TODO(R): Briefly explain ’s going .","code":"names(prepared_df) ##  [1] \"datetime\" \"study\"    \"home\"     \"room\"     \"CO2\"      \"Light\"    ##  [7] \"Pressure\" \"Radon\"    \"RH\"       \"T\"        \"VOC\" annex_df <- annex(Light + CO2 + RH + T ~ datetime | study + home + room, data = prepared_df) head(annex_df) ##              datetime     study        home room season   tod Light CO2 RH    T ## 1 2011-01-01 00:01:26 DEMO_STUD Casa_Blanca  BED  12-02 23-07     0 470 51 18.8 ## 2 2011-01-01 00:06:25 DEMO_STUD Casa_Blanca  BED  12-02 23-07     0 477 51 18.8 ## 3 2011-01-01 00:11:25 DEMO_STUD Casa_Blanca  BED  12-02 23-07     0 483 51 18.8 ## 4 2011-01-01 00:16:25 DEMO_STUD Casa_Blanca  BED  12-02 23-07     0 477 51 18.8 ## 5 2011-01-01 00:21:25 DEMO_STUD Casa_Blanca  BED  12-02 23-07     0 481 51 18.8 ## 6 2011-01-01 00:26:25 DEMO_STUD Casa_Blanca  BED  12-02 23-07     0 483 51 18.7"},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"plotting","dir":"Articles","previous_headings":"Performing the analysis","what":"Plotting","title":"Reading from Textfiles","text":"","code":"plot(annex_df) plot(annex_df, start = \"2011-03-01\") plot(annex_df, start = \"2011-03-01\", end = as.POSIXct(\"2011-03-10\"))"},{"path":"https://some.example-url.com/articles/reading_textfile.html","id":"perform-analysis","dir":"Articles","previous_headings":"Performing the analysis","what":"Perform analysis","title":"Reading from Textfiles","text":"TODO(R): Still contains error seen yesterday.","code":"stats <- annex_stats(annex_df, format = \"long\") head(stats) ##       study        home room season   tod variable stats value ## 1 DEMO_STUD Casa_Blanca  BED  12-02 23-07    Light   Min     0 ## 2 DEMO_STUD Casa_Blanca  BED  12-02 23-07    Light  p2.5     0 ## 3 DEMO_STUD Casa_Blanca  BED  12-02 23-07    Light   p25     0 ## 4 DEMO_STUD Casa_Blanca  BED  12-02 23-07    Light   p50     0 ## 5 DEMO_STUD Casa_Blanca  BED  12-02 23-07    Light   p75     0 ## 6 DEMO_STUD Casa_Blanca  BED  12-02 23-07    Light p97.5     8"},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"With Config","text":"users may data multiple rooms one file (CSV, Excel). prepare data processing, annex package provides function prepare_anenx() takes () data set plus (ii) ‘config’ object. ‘config’ object data.frame containing following information: column: name column CSV/Excel file variable: name observed/measured variable. Note: One column special must exist, namely one row config file variable = \"datetime\" defines column (CSV/Excel file) datetime information stored; must one column. study: Name study home: Name building room: Name room TODO(R): Currently study, home room can anything, quite sure messed demo file; currently good enough development testing. like following: Read data Prepare ‘config’ Call annex_prepare(data, config) … analysis.","code":""},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"the-configuration","dir":"Articles","previous_headings":"","what":"The configuration","title":"With Config","text":"config must data.frame specific content, package care data.frame comes . case using .csv called demo_UIBK_config.csv (shipped package). lines file commented (start #) like ignore import:","code":"config <- read.csv(\"demo_UIBK_config.csv\", comment.char = \"#\") head(config) ##                column variable study home room ## 1         Zeitraum ab datetime                 ## 2    T-WZ_W1 [°C] avg        T  demo   W1  LIV ## 3 rH-WZ_W1 [% rH] avg       rH  demo   W1  LIV ## 4 CO2-WZ_W1 [ppm] avg      CO2  demo   W1  LIV ## 5    T-WZ_W2 [°C] avg        T  demo   W2  LIV ## 6 rH-WZ_W2 [% rH] avg       rH  demo   W2  LIV"},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"checking-the-config-object","dir":"Articles","previous_headings":"The configuration","what":"Checking the config object","title":"With Config","text":"now check object valid using annex_check_config() function. mandatory done inside annex_prepare() case. However, let’s try: … error, fine.","code":"library(\"annex\") annex_check_config(config)"},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"With Config","text":"using UIBK example data set (XLSX format) cut data set first 1500 observations . data set used demo_UIBK.xlsx (also shipped package; thus reduced size). , user import data using preferred method. make use readxl. output shows first 6 rows 3 columns, entire data set much larger. shown, names variables XLSX file.","code":"library(\"readxl\") raw_df <- as.data.frame(read_excel(\"demo_UIBK.xlsx\")) head(raw_df[, 1:3]) ##           Zeitraum ab T-WZ_W1 [°C] avg rH-WZ_W1 [% rH] avg ## 1 2011-10-01 00:05:00            22.64                55.6 ## 2 2011-10-01 00:10:00            22.65                55.5 ## 3 2011-10-01 00:15:00            22.63                55.4 ## 4 2011-10-01 00:20:00            22.60                55.4 ## 5 2011-10-01 00:25:00            22.58                55.5 ## 6 2011-10-01 00:30:00            22.58                55.5"},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"preparing-data","dir":"Articles","previous_headings":"","what":"Preparing data","title":"With Config","text":"can now use raw_df object combination config prepare data. shown, data set raw_df brought new format. datetime: time observation study/home,room: identifiers … followed variables found. variables available rooms, can quite lot NAs prepared data set!","code":"prepared_df <- annex_prepare(raw_df, config, quiet = TRUE) head(prepared_df) ##              datetime study home room CO2   RH     T Other ## 1 2011-10-01 00:05:00  demo  W12  BED 737 48.3 24.22    NA ## 2 2011-10-01 00:10:00  demo  W12  BED 743 48.4 24.21    NA ## 3 2011-10-01 00:15:00  demo  W12  BED 753 48.4 24.22    NA ## 4 2011-10-01 00:20:00  demo  W12  BED 760 48.4 24.23    NA ## 5 2011-10-01 00:25:00  demo  W12  BED 775 48.4 24.25    NA ## 6 2011-10-01 00:30:00  demo  W12  BED 790 48.4 24.26    NA"},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"performing-the-analysis","dir":"Articles","previous_headings":"","what":"Performing the analysis","title":"With Config","text":"object prepared_df now ready () create object class \"annex\" perform analysis. Just fun, even make sense","code":""},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"prepare-annex-object","dir":"Articles","previous_headings":"Performing the analysis","what":"Prepare annex object","title":"With Config","text":"TODO(R): Briefly explain ’s going .","code":"annex_df <- annex(RH + T + CO2 ~ datetime | study + home + room, data = prepared_df) head(annex_df) ##              datetime study home room season   tod   RH     T CO2 ## 1 2011-10-01 00:05:00  demo  W12  BED  09-11 23-07 48.3 24.22 737 ## 2 2011-10-01 00:10:00  demo  W12  BED  09-11 23-07 48.4 24.21 743 ## 3 2011-10-01 00:15:00  demo  W12  BED  09-11 23-07 48.4 24.22 753 ## 4 2011-10-01 00:20:00  demo  W12  BED  09-11 23-07 48.4 24.23 760 ## 5 2011-10-01 00:25:00  demo  W12  BED  09-11 23-07 48.4 24.25 775 ## 6 2011-10-01 00:30:00  demo  W12  BED  09-11 23-07 48.4 24.26 790 class(annex_df) ## [1] \"annex\"      \"data.frame\""},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"plotting","dir":"Articles","previous_headings":"Performing the analysis","what":"Plotting","title":"With Config","text":"","code":"plot(annex_df) plot(annex_df, end = as.POSIXct(\"2011-10-03 00:00\", tz = \"UTC\")) plot(annex_df, start = \"2011-10-03\", end = \"2011-10-04\")"},{"path":"https://some.example-url.com/articles/reading_xlsx.html","id":"perform-analysis","dir":"Articles","previous_headings":"Performing the analysis","what":"Perform analysis","title":"With Config","text":"TODO(R): Still contains error seen yesterday.","code":"head(annex_df) ##              datetime study home room season   tod   RH     T CO2 ## 1 2011-10-01 00:05:00  demo  W12  BED  09-11 23-07 48.3 24.22 737 ## 2 2011-10-01 00:10:00  demo  W12  BED  09-11 23-07 48.4 24.21 743 ## 3 2011-10-01 00:15:00  demo  W12  BED  09-11 23-07 48.4 24.22 753 ## 4 2011-10-01 00:20:00  demo  W12  BED  09-11 23-07 48.4 24.23 760 ## 5 2011-10-01 00:25:00  demo  W12  BED  09-11 23-07 48.4 24.25 775 ## 6 2011-10-01 00:30:00  demo  W12  BED  09-11 23-07 48.4 24.26 790 stats <- annex_stats(annex_df, format = \"long\") head(stats) ##   study home room season   tod variable stats   value ## 1  demo  W12  BED  09-11 23-07       RH   Min 46.6000 ## 2  demo  W12  BED  09-11 23-07       RH  p2.5 47.2475 ## 3  demo  W12  BED  09-11 23-07       RH   p25 49.0000 ## 4  demo  W12  BED  09-11 23-07       RH   p50 49.8000 ## 5  demo  W12  BED  09-11 23-07       RH   p75 51.4000 ## 6  demo  W12  BED  09-11 23-07       RH p97.5 52.6000"},{"path":"https://some.example-url.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Rojas-Kopeinig. Funder, author. Tobias Grass. Author. Reto Stauffer. Maintainer, author.","code":""},{"path":"https://some.example-url.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rojas-Kopeinig G, Grass T, Stauffer R (2022). annex: Annex86 Data Analysis Package. R package version 0.1-7, https://github.com/IEA-EBC-Annex86/annex/.","code":"@Manual{,   title = {annex: Annex86 Data Analysis Package},   author = {Gabriel Rojas-Kopeinig and Tobias Grass and Reto Stauffer},   year = {2022},   note = {R package version 0.1-7},   url = {https://github.com/IEA-EBC-Annex86/annex/}, }"},{"path":[]},{"path":"https://some.example-url.com/contact.html","id":"reporting-bugs","dir":"","previous_headings":"","what":"Reporting bugs","title":"Contact","text":"TODO(R): report bugs; publish package github use github issues? Mail?","code":""},{"path":[]},{"path":"https://some.example-url.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Annex86 Data Analysis Package","text":"TODO(R): Installation instructions; depends little bit package hosted. Something along lines : Install via remotes R, simply call remotes::install_github() download install package.","code":"library('remotes') install_github(\"Annex86/annex\")"},{"path":"https://some.example-url.com/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Annex86 Data Analysis Package","text":"Documentation examples available github.io https://iea-ebc-annex86.github.io/annex/","code":""},{"path":"https://some.example-url.com/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Annex86 Data Analysis Package","text":"get started, check Get started.","code":""},{"path":"https://some.example-url.com/reference/annex.html","id":null,"dir":"Reference","previous_headings":"","what":"Annex Creator Function — annex","title":"Annex Creator Function — annex","text":"Creates object class c(\"annex\", \"data.frame\").","code":""},{"path":"https://some.example-url.com/reference/annex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annex Creator Function — annex","text":"","code":"annex(formula, data, meta = NULL, verbose = FALSE)  # S3 method for annex head(x, ...)  # S3 method for annex tail(x, ...)"},{"path":"https://some.example-url.com/reference/annex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annex Creator Function — annex","text":"formula formula specify data set set . see 'Details' information. data data.frame containing obervations/data. meta NULL (default) list information study, home, room (see 'Details'). verbose logical, defaults FALSE. Can set TRUE increase verbosity.","code":""},{"path":"https://some.example-url.com/reference/annex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annex Creator Function — annex","text":"case data set provided x contain data one study, home, room, fomula two parts, looking e.g., follows: co2 + voc ~ datetime left hand side formula (left ~) specifies names variables observations processed, right hand side name variable containing time information (must class POSIXt). case, meta argument required provide information study, home, room. appended new variable ID. grouping information already data set, analysis can performed depending group information. co2 + voc ~ datetime | ID ... even ... co2 + voc ~ datetime | study + home + room","code":""},{"path":"https://some.example-url.com/reference/annex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annex Creator Function — annex","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/annex_add_season_and_tod.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate season and time of day — annex_add_season_and_tod","title":"Calculate season and time of day — annex_add_season_and_tod","text":"Calculates season time day categories based input argument x.","code":""},{"path":"https://some.example-url.com/reference/annex_add_season_and_tod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate season and time of day — annex_add_season_and_tod","text":"","code":"annex_add_season_and_tod(x)"},{"path":"https://some.example-url.com/reference/annex_add_season_and_tod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate season and time of day — annex_add_season_and_tod","text":"x object class POSIXt.","code":""},{"path":"https://some.example-url.com/reference/annex_add_season_and_tod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate season and time of day — annex_add_season_and_tod","text":"List two elements season (factor) tod (factor).","code":""},{"path":"https://some.example-url.com/reference/annex_add_season_and_tod.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate season and time of day — annex_add_season_and_tod","text":"Reto Stauffer TODO(R): TIME ZONE HANDLING","code":""},{"path":"https://some.example-url.com/reference/annex_check_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking Annex Config — annex_check_config","title":"Checking Annex Config — annex_check_config","text":"'annex config object' simple data.frame can created using Rs standard features. function checking content object matches requirements annex config object. check performed link{annex()} automatically, can also done user manually.","code":""},{"path":"https://some.example-url.com/reference/annex_check_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking Annex Config — annex_check_config","text":"","code":"annex_check_config(x)"},{"path":"https://some.example-url.com/reference/annex_check_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking Annex Config — annex_check_config","text":"x object class data.frame checked.","code":""},{"path":"https://some.example-url.com/reference/annex_check_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking Annex Config — annex_check_config","text":"Invisibly returns (possibly modified) version x containing required columns specific order.","code":""},{"path":"https://some.example-url.com/reference/annex_check_config.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checking Annex Config — annex_check_config","text":"function checks config object set properly contains required information preparing annex data. Fails : TODO(R): checks changed input data.frame variables missing ('column', 'variable', 'study', 'home', 'room') configuration variable = \"datetime\" missing definition variables (datetime ) config contains missing values required variables column name variable = \"datetime\" missing variable 'column' unique duplicated entries combination variable/study/home/room (must unique) variables study, home room contain contain non-allowed characters. Must contain letters (lowercase uppercase), numbers, underscores. Must start letter.","code":""},{"path":"https://some.example-url.com/reference/annex_check_config.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checking Annex Config — annex_check_config","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/annex_parse_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing Formula — annex_parse_formula","title":"Parsing Formula — annex_parse_formula","text":"Function used test parse formula used different functions annex package.","code":""},{"path":"https://some.example-url.com/reference/annex_parse_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing Formula — annex_parse_formula","text":"","code":"annex_parse_formula(f, verbose = FALSE)"},{"path":"https://some.example-url.com/reference/annex_parse_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing Formula — annex_parse_formula","text":"f object class Formula. verbose logical, defaults FALSE. Can set TRUE increase verbosity.","code":""},{"path":"https://some.example-url.com/reference/annex_parse_formula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parsing Formula — annex_parse_formula","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/annex_prepare.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Annex Data — annex_prepare","title":"Prepare Annex Data — annex_prepare","text":"TODO(R)","code":""},{"path":"https://some.example-url.com/reference/annex_prepare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Annex Data — annex_prepare","text":"","code":"annex_prepare(x, config, quiet = FALSE)"},{"path":"https://some.example-url.com/reference/annex_prepare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Annex Data — annex_prepare","text":"x data.frame, data . config data.frame, config information (see annex_check_config()). quiet logical, default FALSE. set TRUE, messages warnings suppressed.","code":""},{"path":"https://some.example-url.com/reference/annex_prepare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Annex Data — annex_prepare","text":"Prepared data.frame processing annex package.","code":""},{"path":"https://some.example-url.com/reference/annex_prepare.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare Annex Data — annex_prepare","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/annex_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Statistics on Annex object — annex_stats","title":"Calculate Statistics on Annex object — annex_stats","text":"Calculate Statistics Annex object","code":""},{"path":"https://some.example-url.com/reference/annex_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Statistics on Annex object — annex_stats","text":"","code":"annex_stats(object, format = \"wide\", ...)"},{"path":"https://some.example-url.com/reference/annex_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Statistics on Annex object — annex_stats","text":"object object class annex. format character, either \"wide\" (default) \"long\". ... currently unused.","code":""},{"path":"https://some.example-url.com/reference/annex_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Statistics on Annex object — annex_stats","text":"Returns object class c(\"annex_stats\", \"data_frame\").","code":""},{"path":"https://some.example-url.com/reference/annex_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Statistics on Annex object — annex_stats","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_pollutants.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking for Allowed Pollutants — check_for_allowed_pollutants","title":"Checking for Allowed Pollutants — check_for_allowed_pollutants","text":"XLSX file template.xlsx contains series pre-defined names pollutants (sheet 'Definitions'). function checks user defined variable names valid. case sensitive; adjusted needed.","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_pollutants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking for Allowed Pollutants — check_for_allowed_pollutants","text":"","code":"check_for_allowed_pollutants(x)"},{"path":"https://some.example-url.com/reference/check_for_allowed_pollutants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking for Allowed Pollutants — check_for_allowed_pollutants","text":"x character vector variable names.","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_pollutants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking for Allowed Pollutants — check_for_allowed_pollutants","text":"Character vector (possibly adjusted) variable names, fails.","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_pollutants.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checking for Allowed Pollutants — check_for_allowed_pollutants","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_rooms.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking for Allowed Rooms — check_for_allowed_rooms","title":"Checking for Allowed Rooms — check_for_allowed_rooms","text":"XLSX file template.xlsx contains series pre-defined names rooms (sheet 'Definitions'). function checks user defined room names valid. case sensitive; adjusted needed.","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_rooms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking for Allowed Rooms — check_for_allowed_rooms","text":"","code":"check_for_allowed_rooms(x)"},{"path":"https://some.example-url.com/reference/check_for_allowed_rooms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking for Allowed Rooms — check_for_allowed_rooms","text":"x character vector room names.","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_rooms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking for Allowed Rooms — check_for_allowed_rooms","text":"Character vector (possibly adjusted) room names, fails.","code":""},{"path":"https://some.example-url.com/reference/check_for_allowed_rooms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checking for Allowed Rooms — check_for_allowed_rooms","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates evaluation statistic for data frame — evaluate","title":"Generates evaluation statistic for data frame — evaluate","text":"Creates statistic containing mean, sd, etc. data frame provided","code":""},{"path":"https://some.example-url.com/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates evaluation statistic for data frame — evaluate","text":"","code":"evaluate(data_frame, formula, path)"},{"path":"https://some.example-url.com/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates evaluation statistic for data frame — evaluate","text":"data_frame data frame specific form formatting() formula formula describing specific layout data frame path path file name generated .csv file","code":""},{"path":"https://some.example-url.com/reference/evaluate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates evaluation statistic for data frame — evaluate","text":"Returns summary statistics convenient form","code":""},{"path":"https://some.example-url.com/reference/evaluate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates evaluation statistic for data frame — evaluate","text":"data frame must formatted formatting() beforehand. Depending number levels size resulting statistic varies. data set successively broken user, study, home, room, pollutant id summarized using statistical variables. statistical parameters used contained statistics(). output saved .csv format.","code":""},{"path":[]},{"path":"https://some.example-url.com/reference/formatting.html","id":null,"dir":"Reference","previous_headings":"","what":"Formats a data frame in specific format — formatting","title":"Formats a data frame in specific format — formatting","text":"Generates new data frame according formula provided.","code":""},{"path":"https://some.example-url.com/reference/formatting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formats a data frame in specific format — formatting","text":"","code":"formatting(   data_frame,   formula,   tz = \"UTC\",   format = \"%Y-%m-%d %H:%M:%S\",   user = \"\",   study = \"\",   home = \"\",   room = \"\" )"},{"path":"https://some.example-url.com/reference/formatting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formats a data frame in specific format — formatting","text":"data_frame data frame formula formula describing specific layout data frame tz time zone like \"UTC\", \"MET\", ... format format time stamps given data frame user abbreviation name respective scientist study natural number (entered character) home natural number (entered character) room abbreviation name respective room","code":""},{"path":"https://some.example-url.com/reference/formatting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formats a data frame in specific format — formatting","text":"Returns data frame specific format according formula provided","code":""},{"path":"https://some.example-url.com/reference/formatting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Formats a data frame in specific format — formatting","text":"function adds columns referring specific season time day (tod) time stamp. Pollutants left side, date terms right including season tod well mandatory variables (home, room, etc.). additional variables given, can also found output. mandatory variable present output, message issued. Furthermore, evaluate function annex used unless required variables available. formula passed contains just mandatory variables, evaluate function annex can used without problems. output contains least seven columns addition columns respective pollutants.","code":""},{"path":[]},{"path":"https://some.example-url.com/reference/is.regular.annex.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Regularity of an Annex Series — is.regular.annex","title":"Check Regularity of an Annex Series — is.regular.annex","text":".regular regular function checking whether series observations underlying regularity even strictly regular. Evaulate group annex object.","code":""},{"path":"https://some.example-url.com/reference/is.regular.annex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Regularity of an Annex Series — is.regular.annex","text":"","code":"# S3 method for annex is.regular(x, strict = TRUE, ...)"},{"path":"https://some.example-url.com/reference/is.regular.annex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Regularity of an Annex Series — is.regular.annex","text":"x object class annex. strict logical, defaults TRUE. FALSE, regularity (strict regularity) checked. ... currently unused.","code":""},{"path":"https://some.example-url.com/reference/is.regular.annex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Regularity of an Annex Series — is.regular.annex","text":"Returns named logical vector name combination grouping (study, home, room), content result checking regularity.","code":""},{"path":"https://some.example-url.com/reference/is.regular.annex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check Regularity of an Annex Series — is.regular.annex","text":"Reto stauffer","code":""},{"path":"https://some.example-url.com/reference/plot.annex.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard plot for annex objects — plot.annex","title":"Standard plot for annex objects — plot.annex","text":"TODO(R)","code":""},{"path":"https://some.example-url.com/reference/plot.annex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard plot for annex objects — plot.annex","text":"","code":"# S3 method for annex plot(x, bygroup = FALSE, start = NULL, end = NULL, ...)"},{"path":"https://some.example-url.com/reference/plot.annex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard plot for annex objects — plot.annex","text":"x object class annex. bygroup logical, default subplots build different variables. TRUE, varables one group plotted one subplot. start start time period interest. end end time period interest. ... currently unused.","code":""},{"path":"https://some.example-url.com/reference/plot.annex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standard plot for annex objects — plot.annex","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/plot.annex_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard plot for annex_stats objects — plot.annex_stats","title":"Standard plot for annex_stats objects — plot.annex_stats","text":"TODO(R): can one plot 5d object?","code":""},{"path":"https://some.example-url.com/reference/plot.annex_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard plot for annex_stats objects — plot.annex_stats","text":"","code":"# S3 method for annex_stats plot(x, ...)"},{"path":"https://some.example-url.com/reference/plot.annex_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard plot for annex_stats objects — plot.annex_stats","text":"x object class annex. ... currently unused.","code":""},{"path":"https://some.example-url.com/reference/plot.annex_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standard plot for annex_stats objects — plot.annex_stats","text":"Reto Stauffer","code":""},{"path":"https://some.example-url.com/reference/statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates compact statistical summary for data frame — statistics","title":"Generates compact statistical summary for data frame — statistics","text":"Creates statistical summary used evaluate()","code":""},{"path":"https://some.example-url.com/reference/statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates compact statistical summary for data frame — statistics","text":"","code":"statistics(data_frame, season = \"ALL\", tod = \"ALL\")"},{"path":"https://some.example-url.com/reference/statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates compact statistical summary for data frame — statistics","text":"data_frame data frame specific form formatting() season character referring specific season tod character referring specific time day","code":""},{"path":"https://some.example-url.com/reference/statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates compact statistical summary for data frame — statistics","text":"Return statistical summary data set","code":""},{"path":"https://some.example-url.com/reference/statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates compact statistical summary for data frame — statistics","text":"Using evaluate(), data set suitably divided combined function. Grouping based user, study, home, room, season, tod.","code":""},{"path":"https://some.example-url.com/reference/summary.annex.html","id":null,"dir":"Reference","previous_headings":"","what":"Annex Summary — summary.annex","title":"Annex Summary — summary.annex","text":"Numeric summary annex object.","code":""},{"path":"https://some.example-url.com/reference/summary.annex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annex Summary — summary.annex","text":"","code":"# S3 method for annex summary(object, type = \"default\", ...)"},{"path":"https://some.example-url.com/reference/summary.annex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annex Summary — summary.annex","text":"object object class annex. type character, one \"default\" (default) \"statistic\". type = \"statistics\" result annex_stats(object) printed. ... currently unused.","code":""},{"path":"https://some.example-url.com/reference/summary.annex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annex Summary — summary.annex","text":"Returns NULL (invisible).","code":""},{"path":"https://some.example-url.com/reference/summary.annex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annex Summary — summary.annex","text":"Reto stauffer","code":""},{"path":"https://some.example-url.com/news/index.html","id":"annex-01-x","dir":"Changelog","previous_headings":"","what":"Annex 0.1-X","title":"Annex 0.1-X","text":"New infrastructure custom S3 class series handy methods Introducing config object easy control Moving project https://github.com/IEA-EBC-Annex86/annex/","code":""},{"path":"https://some.example-url.com/news/index.html","id":"annex-00-9000","dir":"Changelog","previous_headings":"","what":"Annex 0.0-9000","title":"Annex 0.0-9000","text":"Reto just playing around.","code":""}]
